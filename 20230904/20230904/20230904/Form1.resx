<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEhUQEBAVFRUVEBUVEBAXFRAVFhYVFRUWFhUVFRUY
        HSggGBslHRUVITEhJSkrLi4vFx8zODMtOCgtLiv/2wBDAQoKCg4NDhcQEBctHh8fLS0tLS0rLS0tLS0r
        Ly0tLS0tLS0tLS0tLS0rLS0tLS0tLS0rLSstLS0tLS0tLS0tLS3/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAUBAwQGBwII/8QAThAAAQMCAgUIBwUFBAYLAAAAAQACAwQRBSEGEjFB
        UQcTIjJhcYGRFEJSkqGx0SNTYoLBCBUzcuEkRaLxFhc0Y8LwJUNEc4OjsrPD0tP/xAAbAQACAwEBAQAA
        AAAAAAAAAAAAAQMEBQYCB//EADkRAAIBAgIIBAQEBQUBAAAAAAABAgMRBCEFEjFBUWFxkYGhscET0eHw
        IjJCUgYzYnLxFCRDgrIj/9oADAMBAAIRAxEAPwDt6IiACIiACIiACIiACIiACIhQARWzO0bXDzC8+ls9
        oLxKrCO1peKHZ8C8isiqj9oeYXtsrTscD4hEakZflafRg00e0RF7ECiIgAiIgAiIgAiIgAiIgCqIiQii
        IiYwiIgAiIgAiLDq65rMhmeH9VHWrQox16jsvvuOMXJ2SuZZKw5sRY3IdI9n1UTUVL39Y5cNy0jSPTxk
        M3odHC6qqSbc2w9Fhyye4b9twNlsyFgVNMVa8nDCw8XbZxtsS5t+BZVCMVebN+lxOQ7LAdn9VjSSuO1x
        PitLov8ASB41pHUUVz/DLJXkDgS11rqeoqirFm1MLD/vInkt8WPAcPC6xsRVr1HadXW/7Zdsl2vyLEVF
        bI28CTslkVFSsiW4IXpeVVFlwGXY6h7djisuLFCOsAe7JQFdUVFy2CFpNv4kj9Rg8Ggud5Ba/WMx8Auj
        koHcI9SoGXC5Kv4fE4il+Srbk3dds0vGxDOMHtjfw/wdOgrWP2HPgVkrj+E6fFs4o8TpzSzHqvJvE/Za
        zt1+NyO1dCpa97Mj0hwP6FbtPS8qUlDFQtfZKOaa49OjfRFZ0E1eD8GTyKxTVLXi7T3jgr624TjOKlF3
        T3ortNOzCIgXoQREQAREQBVERIRRERMYREQAS6FQ2I1ut0Gno7zx/oqmMxlPC09efgt7f3te7sn7p03N
        2R7rsRv0Y/FyjSUCLisViqmJnr1H0W5cl93e97LaMIKCsjVtPMYmijZS0gvVVTjHAB6jbdOW+7VB27r3
        3K9oZonDQRWHTmeLzznNznbSATmG3v8AMqShwtvpD6p+byxscX4IxmQOBc4knubwWDpRpI2l1IoozPVT
        HVpqVuZcfad7LRx7O8j3BznFYekr62btvfyivC93saPLSV5y+/qybmmawFz3BrRtcSAB4lQ/+mOG62r6
        dBe9ra428L7FXB+TvniKnGZPSZjm2mBIpob56rWesRe1z8dq3IYDR6nN+iwatravNR28rLZo6ATj/wDS
        pnyWzxe0glis8kQsUjXAOaQQdjgQQe4herqA0h0RfQB1dg7dXV6VTh13GKZg2mNuepIBnlll5yeDYnFV
        QsqITdkjbt4g7C09oIIPcsvH6OnhGm3eL2P2ftxJqVVT6mavEsrWtLnuDQNriQAO8lYePYvFSQPqJT0W
        Dqi13OPVY2+8nJYOjuhrqwNrMYHOOf0oKA35mnY4XaHN9aS20nZeyeA0dUxbb/LFb+fBe/AKtZQ6humO
        Gl2qK6C97W1xt79imo5GuAc0hwOxwIIPcQpqTAKNzObdSQFtravNR2t5LS8Y5P305NTgsnMSbX0bi400
        1to1TfUda9rZX4bVp1tAWjelO752z8VsIY4rii7pRo7T18JhnbntjkFtZjuLT8xvUJoBiFRGZMMrbmam
        AMchz52nJs1wO+2zy3gqW0X0kZVtc1zDDURO1ammd1mOG0ji0nYVmYlhYkkhqG5SwyHVds1o35SRu4gj
        MdrQsbWlTjLD1Vbh/TLiuTWT3O99pPZNqcf8r6EkyQg3BseKmKPEA6wfYO2dh7lDLy9oIsRcEZhesFjq
        mFleOae1cfk+fkOpSU1mbUi1iixcwPbFObxPcGwzn1HE5RSntvZrvA52J2ddrh68K9NVKbun92fNGdKL
        i7MIiKY8hERAFUREhFERExhEVirn1Gl2/cF4nOMIucnZLNjSbdkYeKVdvs2nPeVFBHuJNztO1UC4TGYu
        WJquo9mxLgvvN/KxpU4KEbIqioqqqSEfj+LR0lPJUy9WNhNr21neqwdpNh4rE5L9HX2di9aL1VUNaMEf
        wID1GN4XFr9lu28FpJH6filJhV/so/7VVjc5rM2sPG+z866+0AZAW4BdboTCKnS+K9s/T67elihiJ3lq
        8CqIi2yuFyjAIxR4pW4Y1urG4Csphc2DX6rZGjgNY/Arq65hpg7Ux6hcNslFLG48QC5wBVHSdJVMLUXB
        N9s/p0JKLtNFnEmemYvR0JP2VOx1ZOy2TnNyiBPfn+ZdVXMeT9mvjWKynPUbTRtvuDm7Bw6i6cno6kqe
        Fppb0n4vP37BVd5sIiK6RnN+VDApInNxqhb/AGinAFQwXtNT+sCOIGd9tu4KUwfEY6mGOoiN2SMDm9m4
        g9oIIPctxkYCC0i4III4g7QuRaGxGhr6zCHZMa70ijudsT7XA4gXHiHLC03hVOl8ZbY7en029yzh52er
        xN4VCiLlC6W6mnZIx0cjQ5j2lr2HYWnIgq1ovjD4pv3dVOLnapdRTn/rYhticfvWCw4uFjxWUonSXCTU
        w6sbtSaNwlpZha8czM2nPcdh7CVo6NxzwtXN/hlt+fh6XIq1LXXM35Freg2kor6YSOGpNG4xVUOV2Ssy
        cO47R3rZF25nBERAFUREhFERExhQmKz6z9Xc3571Lzv1Wl3Ba2TvKwNPYlxpxor9Wb6LZ3foWsNHNy4F
        CvS8lFyxdKqqoFZq5NVj3j1WOcPBpP6IFexrXJG01FZieIOHWqBBEb3syO9wOwgR+S6mubcgLP8AorW3
        uqpS47yeiM/JdEqZQxjpHbGtLndzRc/JfRoQUIqK2JJdjKbvmQuk+mFDh7QaucMLupGAXSOHEMGdu3Yr
        +jeklJXxc9STB7QbOGYc08HNOY/VcC5U8ewvEwytppHsqWtDJYJGuGvGCbFrhdus0k78wexU5BcUfFiY
        hB6NRE9r29rAXtPhY+a9CPpZct0zIfj9C0ZmOjle4cA4vAuupLkGGSGqx6uqQQY6eEUrHDZrXbrAHsLZ
        PNUtIz1MLVf9LXfL3JKSvNGbyfThuN4rFfrtp3gcdVo//RdSXIpZRSaQ0sxNm1lO6B3DXbk0nxEY8V11
        esBUU8NTa/al2y9UKqrTZrGlOnWH4e5sdVPZ7hfm2tL3AbnODeqO/apXA8bpqyIT0srZI3bxtB3tcNrX
        dhXzzys0VFNPJX0eJRTl5HO05d02kANvGTk5uQ6O0dqch2kMlNiDKbW+yqrse0k2Dw1xjcBxv0fzditn
        g+mFyrlQYKbFMMrhkHvdTSniHWDb9n2jvJdVXLv2gI/7FTy7466MjxY+/wAgvFSn8SEoP9Sa7qw07O5t
        KFeIjcA8QD5heyvnRrFVRFQIA0urq/3Zi0VVmKav1YaoW6LZhbm5D5+WttXXVzbT7B/SqGaIDpBhki46
        8YLgB32I8VM8lGkHp2GwyON5IxzMxJuS6MABx7S3VPiux0Nifi4fUe2GXhu+XgZ+Ihqz6m4IiLXICqIi
        QiiIiYyPxiSzQ3ifkodSGMv6QHAfM/0UfdcTpeo54uXKy8r+rZo0FamuZQoqqizSYqFZqotZj2e0xzfM
        Efqr11W6M9wGsfs+1AOGvi9aKrkDxw1g0j9Vu2mDHuoapsfWNJMGd/NusuY6A1Qw7GqrD5DaOrtLTuJA
        6Ru5oHfrPb3tC7HI0OBBFwRYjiDtC+i0qkakFOOxq/cyWrOzPiMLp/7P+FGXEXVHq08LiT+KToNHlr+S
        mcd5DJzUONJURNgc8lrX6+tGCb6uQOsBuK6loZotT4VS8yx19r6id1m67rZuPstAyA3Ad5XsRe030gbQ
        UU1U4i7WWiafWkdkxvmb9wK0jkwwZ1NRNdJfnZ3GaW+27+qD+UA95KicWrTj2ItjYL4fRvu52erPJsy7
        934bneuiBc3p3Fp2w8esvZe/Yt4an+pmncqOGvkpBUQ5TUkgnicNoDSNe3gAbfhW/wCiGOMrqOGqYR9p
        GNcezIMpG+DgVHvAIsRcEWI4jgufaP4l+4cQdTTEjD6t+vDKerDIcrHgBkD2ap3FGgsWrOhJ817r37hi
        YfqRyLSvDnU1ZUU726pZO8AfhJuz/CQfFZWgELn4lRtZt9KjPgHXPwBXdeUvk0ZiZbVU0jY6gNAJNzHK
        wDo3I2EbnDd4Ww+THkrdQT+mVcjHytaRCxmtqs1gWucXG1zY2GWVz4dIVDqq5V+0FLelpYBtkrm+TWOH
        zeF1VcX0tqxiWO09NH0oaAF8zh1ecBDnDt6Qjb4FR1qqpU5VHsim+w4q7SRvsTbADgAPIL2Uui+dmsER
        EAFz7knqfQ8Wr8NcbCR5khbfLokuFhxMbx7q6Bdct0nqPRNIqKptk9sbT262vA4nwctrQVXVxEofuXp9
        srYmP4bne0RF1xRKoiJCKIiJjILEz9ofAfBYiycR/iO7/wBAsZcBjHfE1X/VL1ZqU8oLoVRUKx62sihY
        ZJpGRsG173Bo8yqyV8j3sMhFAQaZ4Y9wY2th1ibAa1gSdguclPr3OnKGUk11TXqJST2GpcoGiprY2SwO
        1KqA69O8G1yM9S+7MAg7irGi3K7HGPRcYY+CePovl1HFrrb3NaCWk9gIO1bosDFMHpqkatRAyQDZrNBI
        7jtHgtTR+lpYaOpNa0fNfNciCrQ181tKYhys4LE3WFXzhtcMjZK4nsuWgDxIWj4hjeJY+eagY6kw8n7S
        Q9eUAi7SfW/lGXElbTRaF4bE7Xjo4g4bCQXW7tYlT1tyt4jTzcbUYW5vd4K68yOGG/czCwTCIaSFtPA3
        VY0dl3He5x3uPFZyBFz0pOTbk7tluwKjsfwSCshdTztu05gjrNduc07iLqRKIjJxalF2aBq+TObYZpHi
        WAkQVkbqqhBtFO3rRg7GgnZ/K7wK3qg5V8FlbremCM2zZIyVrh2dWx8CVnFoORFwRYg7D4KAq9CcMldr
        uoornaQC2/eGkBdFh9P2Vq0LvjG2fg7LzKksL+1kRpVytif+x4JG+aeTJs+o5oaDe5Y11jrDi4ADbms7
        QDRX0CEmQ69RKdaokvfPaGBxzIFznvJKnMNwmnp26lPCyMbwxoF+87T4rMCpaQ0rLFR1IrVj5v6ciSlQ
        UHd5sqEVisq4oWmSaRsbBte9waB4lQ0WmmGOcGNrYbk2HSsCTszOSzI05yV4xb6JsmcktrNgVFVAvB6K
        LkvLm4slopm9YCWx/kdG4fEldbXJeXvZSd8//wAS0tEP/eU/H/yyHEfy2d8pJddjHj1mNd7wB/VXlEaI
        P1qGlcd9JD/7bVLrtjOKoiJCKIiJjILEx9ofArEUhjLbOB4j5H+qj1wmkY6uKqrnfvn7mnRd4IKw+kjc
        dZ0bXH2nAOI7BfYrxVVSu1sZJY13BaWmq4HPlp4ntfUVHRcxhybK+MbuDApigo2QsEUdwxvUaXF2qPZB
        OdhuG5abg9XPhbpKerhkfTGWSSnq4mOkDWvcXubK1t3NsTttxWy0ulNBIAWVsBvu51gPiCQQrdeE05al
        3Bu6tmuK6NJ9eRDBqyvkyXRYza+E7J4z3Pj+qutnYdj2n8zVUasSlxCvOsOIXtedZcRnlF6t2JZO6GUR
        CqpisURUCrbsSuhgohXgytG1zR4hGshFqSkjc7WdG1x3FwDiOwX2eC1LRx0FVPiFNLDHJHFWdAOYwgBz
        bOaMvaa4+KytK9OKWjjIY9ss5yhgYQ8l52F9tg+JVrkywCWlpnPqb89USGWUHa2+wOPHaT3q/GnKGHlU
        ndXso7nk7trkll4kLackl4mzYdQsgYIo7hg6jSS7VHstJzt2E5LKVVQKlKTk227tkqVskFyDl6eNekZf
        MMmcR3mMD/0ldfXDeWGQzYlHC07IY2AcHSOJ/ULU0LHWxkXwTflb3IcR/LPoPRCMtoaVp2ilhH/ltUur
        NLFqMaweqxrfdAH6K8uzM8qiIkIoiImMj8XZdgdwPwP/ACFDWWyzM1mlp3rW3Ag2PiuT09R1a0am6S81
        9Ldi9hpfha4FCqqhVVhlkBYVZhFNL/Fp4n326zGE+ZCzFUozWzILHzq6lpKXEJKfEoXPhbKWl0Z5t7Gk
        3bIABZ/RIy8l1vCeSjAKqJs9NJLJG4ZObMDbsI1ciN4OYWj8uOFas8VWBlIzm38NaPq+bT/hWkaOaTVl
        DJztJM5hv0m3ux/Y9hycu/wVf49CFTe1n1WT8zLqQ1ZNHdpOQzCzskqB+dh/4Vb/ANR9GOpW1Te50f8A
        9VgaL8ucD7MxCExOtnNHd7CeJZbWb4XXSsH0poKpodTVcUl9weA7uLHWcD2EK1rPieDRf9TYHUxatb+Y
        foQvLeSKpb1Mbqh36x/411UKiidKD2xT8B3ZzOPkxrR/ftT7v1csqPk1qPWxutPcWD6roaLx/pqP7I9k
        Gs+Jzw8l1+vi9ef/ABg35BexyT0vrVtc7vqXfRbxVVsUQvLKxg4uc1vzK0TSblfwylDmwyekyjZHHfUv
        2ykatu669qjTWyK7IV2ROlPJ1gdHA6prJaktbsDpyXPduY0EZuK51yb6L02IVE8kkLm08bRqRa7+s89F
        pkFibAEqA0y0wqsSm52odZoyihaXc3GM9g3uzzdtK7TyY4N6LQRhws+X7aTK1i/qjwaG/FUNL4uVDD/h
        laUnZct7fkTUIKUs9iJTB9F6Klt6PTMYRsktrP8Afdc/FTBCIVxkpSk9aTu+Lzfc0EktgQIqBeRlSuDY
        G3946QMJNw+uc8EbObhu5v8AhjC6tyg4x6JQTSA2c5hij/nkBaCO4XPgtM/Z1wXXnnrXNyiYIo3bteS5
        fbtDQPeXS6Aota9V/wBq9X7FPFS2RO/IiLoyoVRESEURETGFCYtBqu1hsd81NqzVQB7S348FR0jhf9TQ
        cFtWa6r5q6JKU9SVzXSl1V7SCQdoOaouFNMoqohQBq3KXhPpOHzNAu6NvPR5Z3jBJt3t1h4r5xX1s5oI
        scwRYjivmXTHCTSVk0FrNEhdHw5t3SZbwNvBdL/D9fKdF9V6P2KeKjmpEIg4oi6QqktRaTV8OUNbUMFr
        arZZQPK9lnt0+xcf3jUe+T81rSJAbK7T/Fz/AHjP75Cx6jTLFHiz8QqSOHPSD5FQSIAu1FQ+Q60j3PPF
        zi4+ZVlVRMCd0Kwb0ytig9Uu1pT+BubvPZ4r6YHAeS5jyI4HqQyVzx0pTzcX8jSC4jvdl+RdPC43TWI+
        LiNRbIZeO/5eBew8bRvxKIiFZBOVRVWv6a6RMoKV85zeehAzLpSHZlwG09y9whKclCKu3kgbSV2cv5Zc
        f5+pbRxm7YOtbPWleBcW7BYd5K7XyY6Peg4dDC4Wkc3nZr7RJJYlvgLN8FxDkg0XdiNf6RMC6KB4mmcf
        XlLtZjTxuQSewdq+m132GoRw9KNKO7ze9mXOTlJthERTnkqiIkIoiImMIiIAjcUpbjXaMxtHEKJW0KHx
        Ght02DLeOHb3Lm9MaObbr0l/cvde68eJbw9X9L8CPCFEXNlwLlvLXo6Xxsr425xjUn4lhI1HeBJH5gup
        K3LE17Sx4DmuBDmnMEEWIIVjC4h4etGot3mt6PFSGtGx8mqZ0f0bqq1xFOwENtrvcQ1rb7LnjlsF1uWm
        XJdNE501AOdiJvzFyZGZnJvttHffvV7kzx+CkZJR1hMEnO64MgLAbgAgk9Ui2/iu4oYqliI61KV/VdV9
        8rlGNO07TyICu5NcSjbrBjJeIjeCfJwF/BalNA9jjG9rmvBsWEEOB4WX03T1DHgOje1zTsc0hwPiFafh
        8JlE5iaZGtLWyFo1gDnYHwU+sTywqf5WcHo9B8TlAc2kcARcFxYz4OIKwMX0fq6W3pMDow42a46paTwD
        mki6+jyVpPKlidP6DJDzsbpHPj1Iw9pcCHgl1gbiwB80XFPDxjFu5xJZ2DYbJUzx08Qu+R4aOwbS49gA
        J8FfwPR+qq3BtNA59zYvsdRva5+wLuGgGg8eHtMjyJKh4s+QDosG9kd87cTvsqGP0jTw0Wr3nuXu+CRB
        Tpub5GzYVh7KeGOnj6scbWN7bDae07fFZYRAuIbbd2aWwKhVbq3NM1jS97g1rQS5xIAAG0knYEgPNXUs
        iY6WRwaxjS57jsAG0lfP2k+NVGMVzY4Wkgv5qkh7CeseBO0ncB2KR5RtNnV7/Raa/MNfYADOd9xZ1ttr
        7B237uocjvJ96DH6XVNHpMrOi37mMjq/znfw2cV1uiNHOgvjVF+N7FwXze/hs4lCvW1slsNt0G0Yjw6k
        ZTMzcOlNJYXfI7rHuGwdgC2FEW2VwiIgCqIiQiiqqImMIvBkAVh9WAgDKRRsuILFkxLtQBdxChAu9ne5
        u3xH0UY1wIuDcHYV7finaoWsmc0mSnLQ45uhdfm3njlnG78Q8QVgY/QqqN1KGT3rc+nB8tm/LMs0sRbK
        RMqgUVhuPwyu5okxTfcSWDj2sOyQdrSfBSoC5mpTlTk4zVmtzLqaauiqxa7DoJhqzQxyA7Q9jXfMLKQr
        xzGzWH6A4YTdtOYz/u5Z4x5NcAvDtA6TdLVDsFVP+pW1AIrKxmIX/LLu/mePhxW41I8nVAevz7/5qic/
        IhZdBoPhkNiyjjJGxz9aQ/4yVsRRKWLryVpVJNdX8wVOG5HiNjWizQAOAAA8gvaAIq57BRDx8ytF0r5T
        KOluyAiom4NP2bT+J+/uHwUtGhUrS1acXJ8t3XguZ5lJRV2bfimJQ00ZmnkbGxu1xPwA2k9gXDtNtOZ8
        Rf6NTNc2AuAZE0EvmdsBcBnvyaPiVHSSYnjE+d323ZthiHyG3tJ7V17QPQ2lw77TKWoIzmcBZvZE31e/
        b8l1Wj9Eww7VSp+Ka7L68+3EpVa7lkthTko5LxSatZXNDqi14ociIb7zuL/kusKDjxDtWTFXrZK5JosV
        lWCrzZQUAXEVAVVAFUREhFt77LFmnKvyhYUzdoTGY8tQVgzVBWRK0rDmbndAGLPUlYM1UVkzR/5rAniK
        AMaarKxXzOO9XJoTdWHBAFitpWSt1JWhw2i97g8WkZtPaM1bgqsRpv8AZ5xPGP8As9Rm63Bs46XvXWWg
        UVahTrR1akVJc/bh4DjJxd0ysHKRAw6tbTzUzrgaxbzkZvwe36LY6DSOhnzhq4XX9XnGB3uk3WsyMDhZ
        wBB2ggEeRUHW6IUMu2AMPGM6nwGXwWRV0DQlnCTj5r5+ZYjiZLbmdWab5jPtVVxl+hj2f7NXzxcBrOIH
        ZdpC8nAcVHVxabxkqB+qpS/h+r+mon1TXpc9rFL9p2iytyytaLucGji4gDzK4pJgGMOydichH/f1Kxpd
        BKqT+LW63fzr/mV6h/D83+eol0TfrYHiluR1jEtNMNgB5ysiJHqMcJHeTLrTsY5YoG3bSU7pDukkIY2/
        HVFyfgoGj5O4R/Fne7saGsHxuVN0OitFF1YGuPtP6Z+OSu0dB4eGc25eS8s+7ZHLESezI02uxjF8UOqS
        8xn1GDm4bfiOw7d5Kk8G5P2izqt+tl/CZcDxftPhZbyAALAWA2AbFULXp04U46sIpLgiBtvae6DUiaI4
        2NY0bGtAAUlFUlRrIyVmxxnevYiSiqCsyGoKjomHaVmwM3oAkIp/+d6zI5yo6JlvFZkbdyQEjFN/mstk
        nFR8TdyzGBMDJRURIRUqy+EFXUTGYUlIsSShPBTCIA12XDneyfJYsmFu9k+RW2IgDSn4Q/2HeRWLJgr/
        ALt3ulb+iAOcvwKT7t3un6KycCm3Rv8Add9F0xEAcvdgk/3b/dd9F5ODVH3T/dd9F1JEAcs/c9R9y/3X
        fRP3PUfcv9130XU0QByz9z1H3L/dd9FX9zVH3T/dd9F1JEAcuGCz/dP91y9jA5vu3+676LpyIA5s3Apf
        u3+65X48Ek+7d7p+i6EiANEjwd/3bvdP0WSzCn+w7yK3JEAarHhrvZPkVlRUDvZPkVsCIAh46I8CsqOl
        WciALLIAFdAVUQBVERIQREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQB
        /9k=
</value>
  </data>
</root>